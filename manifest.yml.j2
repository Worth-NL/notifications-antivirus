{%- set app_vars = {
  'notify-antivirus': {},
  'notify-antivirus-ecs-fixup': {
    'additional_env_vars': {
      'NOTIFICATION_QUEUE_PREFIX': ('production-' if environment == 'production' else (NOTIFICATION_QUEUE_PREFIX + '-ecs')),
    },
    'instances': {
      'preview': 0,
      'staging': 0,
      'production': 0,
    },
  },
} -%}

{%- set app = app_vars[CF_APP] -%}
{%- set instance_count = app.get('instances', {}).get(environment) -%}
---

applications:
  - name: {{ CF_APP }}

    {% if instance_count is not none %}
    instances: {{ instance_count }}
    {%- endif %}

    memory: 4G
    disk_quota: 2G
    health-check-type: process
    routes:
      - route: {{ CF_APP }}-celery-{{ environment }}.cloudapps.digital

    services:
      - logit-ssl-syslog-drain

    command: ./scripts/paas_app_wrapper.sh

    env:
      NOTIFY_APP_NAME: {{ CF_APP }}
      CW_APP_NAME: antivirus
      STATSD_HOST: 'notify-statsd-exporter-{{ environment }}.apps.internal'
      NOTIFY_LOG_PATH: /home/vcap/logs/app.log
      NOTIFY_ENVIRONMENT: {{ environment }}

      # Credentials variables
      AWS_ACCESS_KEY_ID: '{{ AWS_ACCESS_KEY_ID }}'
      AWS_SECRET_ACCESS_KEY: '{{ AWS_SECRET_ACCESS_KEY }}'
      NOTIFICATION_QUEUE_PREFIX: '{{ NOTIFICATION_QUEUE_PREFIX }}'

      SENTRY_ENABLED: '{{ NOTIFICATIONS_ANTIVIRUS_SENTRY_ENABLED }}'
      SENTRY_DSN: '{{ NOTIFICATIONS_ANTIVIRUS_SENTRY_DSN }}'
      SENTRY_ERRORS_SAMPLE_RATE: '{{ NOTIFICATIONS_ANTIVIRUS_SENTRY_ERRORS_SAMPLE_RATE }}'
      SENTRY_TRACES_SAMPLE_RATE: '{{ NOTIFICATIONS_ANTIVIRUS_SENTRY_TRACES_SAMPLE_RATE }}'

      {% for key, value in app.get('additional_env_vars', {}).items() %}
      {{key}}: '{{value}}'
      {% endfor %}
